// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Unisol.Web.Entities.Database.MembershipModels;

namespace Unisol.Web.Entities.Migrations
{
    [DbContext(typeof(PortalCoreContext))]
    [Migration("20201015121857_AddClientIps")]
    partial class AddClientIps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Addresses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Constituency");

                    b.Property<string>("ContactNote");

                    b.Property<string>("County");

                    b.Property<string>("District");

                    b.Property<string>("HomeFax");

                    b.Property<string>("HomeTel");

                    b.Property<string>("House");

                    b.Property<string>("Nationality");

                    b.Property<string>("Paddress")
                        .HasColumnName("PAddress");

                    b.Property<string>("Pager");

                    b.Property<string>("PostalCode");

                    b.Property<int>("StaffId");

                    b.Property<string>("Street");

                    b.Property<string>("Street1");

                    b.Property<int>("StudentId");

                    b.Property<string>("SubCounty");

                    b.Property<string>("Web");

                    b.Property<string>("Wemail")
                        .HasColumnName("WEmail");

                    b.Property<string>("Wfax")
                        .HasColumnName("WFax");

                    b.Property<string>("Wtel")
                        .HasColumnName("WTel");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.ClientIp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Fails");

                    b.Property<string>("Institution");

                    b.Property<string>("Ip");

                    b.HasKey("Id");

                    b.ToTable("ClientIp");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Countries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Divisions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("SectionId");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.DocumentRepository", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FolderName");

                    b.Property<string>("FolderPath");

                    b.Property<bool>("IsParent");

                    b.Property<int>("ParentId");

                    b.Property<bool>("Status");

                    b.Property<string>("UserGroups");

                    b.HasKey("Id");

                    b.ToTable("DocumentRepository");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.DocumentRepositoryFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<string>("FileDescription");

                    b.Property<string>("FileExt");

                    b.Property<string>("FileName");

                    b.Property<string>("FilePath");

                    b.Property<int?>("FileSize");

                    b.Property<string>("FileStatus");

                    b.Property<string>("FileType");

                    b.Property<int>("FolderId");

                    b.Property<int?>("RepositoryId");

                    b.Property<bool>("Status");

                    b.Property<string>("UserGroups");

                    b.HasKey("Id");

                    b.HasIndex("RepositoryId");

                    b.ToTable("DocumentRepositoryFiles");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EmployeeCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EmployeeCategories");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.ErrorLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ControllerUrl");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Error");

                    b.Property<string>("PossibleReason");

                    b.Property<string>("UserCode");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("EvaluationDesc");

                    b.Property<string>("EvaluationName");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("EvaluationSectionId");

                    b.Property<string>("MultiAnswers");

                    b.Property<string>("QuestionDesc");

                    b.Property<string>("QuestionResponse");

                    b.Property<int?>("QuestionType");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationSectionId");

                    b.ToTable("EvaluationQuestions");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationQuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("EvaluationQuestionId");

                    b.Property<bool?>("OptionResponse");

                    b.Property<string>("QuestionOption");

                    b.Property<bool>("QuestionOptionStatus");

                    b.HasKey("Id");

                    b.ToTable("EvaluationQuestionOptions");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationQuestionResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("EvaluationId");

                    b.Property<int>("EvaluationQuestionId");

                    b.Property<int>("EvaluationSectionId");

                    b.Property<int>("EvaluationTakenUnitWiseByUserId");

                    b.Property<int>("EvaluationsCurrentActiveId");

                    b.Property<string>("QuestionResponse");

                    b.Property<int?>("QuestionType");

                    b.Property<string>("SectionName");

                    b.Property<string>("UnitCode");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("EvaluationQuestionResponses");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationQuestionResponseOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("EvaluationQuestionOptionId");

                    b.Property<int>("EvaluationQuestionResponseId");

                    b.Property<string>("OptionName");

                    b.HasKey("Id");

                    b.ToTable("EvaluationQuestionResponseOptions");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationsCurrent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentEvaluationName");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("EvaluationId");

                    b.Property<int>("EvaluationTarget");

                    b.Property<int?>("SemesterId");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("Status");

                    b.Property<int?>("YearId");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationId");

                    b.ToTable("EvaluationsCurrents");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationsCurrentActive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("EvaluationTarget");

                    b.Property<int>("EvaluationsCurrentId");

                    b.Property<int>("EvaluationsId");

                    b.Property<bool>("IsElearnigEvaluation");

                    b.Property<bool>("IsMandatory");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationsCurrentId");

                    b.ToTable("EvaluationsCurrentActive");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("EvaluationId");

                    b.Property<string>("SectionDesc");

                    b.Property<string>("SectionName");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationId");

                    b.ToTable("EvaluationSections");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationTakenUnitWiseByUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcademicYear");

                    b.Property<Guid>("AspNetUserId");

                    b.Property<string>("Campus");

                    b.Property<string>("CertType");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Department");

                    b.Property<int>("EvaluationCurrentActiveId");

                    b.Property<int>("EvaluationCurrentId");

                    b.Property<int?>("EvaluationId");

                    b.Property<string>("Gender");

                    b.Property<string>("LecturerName");

                    b.Property<string>("Programme");

                    b.Property<string>("Schools");

                    b.Property<string>("Semester");

                    b.Property<string>("TargetNames");

                    b.Property<string>("UnitCode");

                    b.Property<string>("YearOfStudy");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationId");

                    b.ToTable("EvaluationTakenUnitWiseByUsers");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationTargetGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("EvaluationsCurrentActiveId");

                    b.Property<int>("EvaluationsCurrentId");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<string>("Names");

                    b.Property<string>("ReferenceId");

                    b.Property<int?>("TargetGroupId");

                    b.Property<int>("TargetType");

                    b.Property<string>("Year");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationsCurrentActiveId");

                    b.ToTable("EvaluationTargetGroups");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.ExaminationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("ActionDescription");

                    b.Property<string>("AdminNo");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Semester");

                    b.HasKey("Id");

                    b.ToTable("ExaminationLogs");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.HrEmployees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcademicRank");

                    b.Property<DateTime>("Adate");

                    b.Property<int>("AddressId");

                    b.Property<int>("ApplicationUserId");

                    b.Property<Guid?>("ApplicationUserId1");

                    b.Property<int>("CountryId");

                    b.Property<string>("Disability");

                    b.Property<int>("DivisionId");

                    b.Property<DateTime>("Dob");

                    b.Property<string>("Educ");

                    b.Property<string>("EmgName");

                    b.Property<string>("EmgNotes");

                    b.Property<string>("EmgRel");

                    b.Property<string>("EmgTel");

                    b.Property<int>("EmpCatId");

                    b.Property<string>("EmplNo");

                    b.Property<string>("Exp");

                    b.Property<DateTime>("Hiredate");

                    b.Property<string>("Idno");

                    b.Property<DateTime>("InsExp");

                    b.Property<bool>("IsSmoker");

                    b.Property<int>("JobCatId");

                    b.Property<string>("KraPin");

                    b.Property<string>("Lang");

                    b.Property<int>("LeaveGroupId");

                    b.Property<string>("LicClass");

                    b.Property<DateTime>("LicExp");

                    b.Property<string>("LicNo");

                    b.Property<int>("Marital");

                    b.Property<string>("Medical");

                    b.Property<string>("Nhif");

                    b.Property<string>("Notes");

                    b.Property<string>("Nssf");

                    b.Property<string>("PassportId");

                    b.Property<int?>("PersonnelId");

                    b.Property<Guid?>("PersonnelId1");

                    b.Property<string>("Ppn");

                    b.Property<DateTime>("Ppnexp");

                    b.Property<string>("Race");

                    b.Property<DateTime>("Rdate");

                    b.Property<string>("Religion");

                    b.Property<string>("Skills");

                    b.Property<string>("SpouseName");

                    b.Property<int?>("SupervisorId");

                    b.Property<bool>("Terminated");

                    b.Property<int>("TerminationId");

                    b.Property<string>("Title");

                    b.Property<string>("Visa");

                    b.Property<DateTime>("VisaExp");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ApplicationUserId1");

                    b.HasIndex("CountryId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmpCatId");

                    b.HasIndex("JobCatId");

                    b.HasIndex("LeaveGroupId");

                    b.HasIndex("PersonnelId1");

                    b.HasIndex("SupervisorId");

                    b.ToTable("HrEmployees");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.ImprestSurrenderReq", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description");

                    b.Property<string>("EmployeeName");

                    b.Property<string>("ImpRef");

                    b.Property<string>("PayeeRef");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("SurReqDate");

                    b.HasKey("Id");

                    b.ToTable("ImprestSurrenderReqs");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.InaccessibiltyLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Institution");

                    b.Property<string>("Ip");

                    b.Property<string>("MailReceiver");

                    b.HasKey("Id");

                    b.ToTable("InaccessibiltyLog");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.JobCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.LeaveGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("LeaveGroups");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.ModuleAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateActivated");

                    b.Property<string>("Enabled");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleAction");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Modules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active");

                    b.Property<DateTime>("DateEnabled");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalAdmins", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ApplicationUserId");

                    b.Property<bool>("Closed");

                    b.Property<string>("ClosureReason");

                    b.Property<DateTime>("DateClosed");

                    b.Property<string>("FullName");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("PortalAdmins");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AspNetUserId");

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("PortalConfigs");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalEvents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campus");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Department");

                    b.Property<string>("EventDesc");

                    b.Property<DateTime>("EventEndDate");

                    b.Property<DateTime>("EventStartDate");

                    b.Property<string>("EventTitle");

                    b.Property<string>("EventVenue");

                    b.Property<int?>("PortalEventTypeId");

                    b.Property<string>("School");

                    b.Property<bool>("SendEmailFlag");

                    b.Property<int?>("TargetAudience");

                    b.Property<string>("TargetGroups");

                    b.Property<string>("YearOfStudy");

                    b.HasKey("Id");

                    b.HasIndex("PortalEventTypeId");

                    b.ToTable("PortalEvents");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalEventTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("EventTypeName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PortalEventTypes");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateModified");

                    b.Property<DateTime>("DateReceived");

                    b.Property<DateTime>("DateSent");

                    b.Property<bool>("GroupMessage");

                    b.Property<string>("GroupName");

                    b.Property<string>("Message");

                    b.Property<int>("MessageStatus");

                    b.Property<bool>("ReceiverDelete");

                    b.Property<Guid>("ReceiverId");

                    b.Property<bool>("ReceiverTrash");

                    b.Property<bool>("RoleId");

                    b.Property<bool>("SenderDelete");

                    b.Property<Guid>("SenderId");

                    b.Property<bool>("SenderTrash");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("PortalMessage");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CreatorId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<string>("NewsBody");

                    b.Property<bool>("NewsStatus");

                    b.Property<string>("NewsTitle");

                    b.Property<int>("PortalNewsTypeId");

                    b.Property<bool>("SendEmailFlag");

                    b.Property<int>("TargetAudience");

                    b.Property<string>("TargetGroups");

                    b.HasKey("Id");

                    b.HasIndex("PortalNewsTypeId");

                    b.ToTable("PortalNews");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalNewsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NewsTypeName");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("PortalNewsTypes");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalNewsViews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AspNetUsersId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("PortalNewsId");

                    b.HasKey("Id");

                    b.HasIndex("PortalNewsId");

                    b.ToTable("PortalNewsViews");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.ProfileUpdates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowedAdminApproval");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Email");

                    b.Property<string>("HomeAddress");

                    b.Property<bool>("Status");

                    b.Property<string>("TelNo");

                    b.Property<string>("UserCode");

                    b.HasKey("Id");

                    b.ToTable("ProfileUpdate");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Sections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeptId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ClassStatus");

                    b.Property<string>("EmailUserName");

                    b.Property<string>("ExamCardNotes");

                    b.Property<int>("HostelDuration");

                    b.Property<string>("HostelRatio");

                    b.Property<string>("Initials");

                    b.Property<bool?>("IsGenesis");

                    b.Property<string>("LoginMessageTitle");

                    b.Property<string>("LogoImageUrl");

                    b.Property<string>("Modules");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Port");

                    b.Property<string>("SecondaryColor");

                    b.Property<string>("SmtpClient");

                    b.Property<string>("ThemeColor");

                    b.Property<int>("UnitsRegLevels");

                    b.Property<string>("loginImageUrl");

                    b.Property<string>("loginMessage");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.StaffTerminations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Notes");

                    b.Property<int>("StaffId");

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("StaffId")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("StaffTerminations");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.TerminationTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TerminationTypes");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<int>("AccountType");

                    b.Property<string>("Code");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<byte[]>("FingerTemplate1");

                    b.Property<byte[]>("FingerTemplate2");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("Status");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<int>("UserGroupsId");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.HasIndex("UserGroupsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.UserGroupPrivilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Code");

                    b.Property<int?>("Level");

                    b.Property<string>("PrivilegeName")
                        .HasMaxLength(50);

                    b.Property<int?>("Role");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("UserGroupPrivileges");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.UserGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowedPrivileges");

                    b.Property<string>("GroupName");

                    b.Property<bool>("IsDefault");

                    b.Property<int>("Role");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.UserResetPassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("ResetCode");

                    b.Property<bool>("Status");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserResetPasswords");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.UserToken", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<Guid>("Id");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Divisions", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Sections", "Section")
                        .WithMany("Divisions")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.DocumentRepositoryFile", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.DocumentRepository", "Repository")
                        .WithMany("DocumentRepositoryFiles")
                        .HasForeignKey("RepositoryId");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationQuestion", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.EvaluationSection")
                        .WithMany("EvaluationQuestions")
                        .HasForeignKey("EvaluationSectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationsCurrent", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Evaluation", "Evaluation")
                        .WithMany()
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationsCurrentActive", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.EvaluationsCurrent")
                        .WithMany("EvaluationsCurrentActive")
                        .HasForeignKey("EvaluationsCurrentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationSection", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Evaluation")
                        .WithMany("EvaluationSections")
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationTakenUnitWiseByUser", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Evaluation", "Evaluation")
                        .WithMany()
                        .HasForeignKey("EvaluationId");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.EvaluationTargetGroup", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.EvaluationsCurrentActive")
                        .WithMany("EvaluationTargetGroups")
                        .HasForeignKey("EvaluationsCurrentActiveId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.HrEmployees", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Addresses", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId1");

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Countries", "Country")
                        .WithMany("HrEmployees")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Divisions", "Division")
                        .WithMany("HrEmployees")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.EmployeeCategories", "EmpCat")
                        .WithMany("HrEmployees")
                        .HasForeignKey("EmpCatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.JobCategories", "JobCat")
                        .WithMany("HrEmployees")
                        .HasForeignKey("JobCatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.LeaveGroups", "LeaveGroup")
                        .WithMany("HrEmployees")
                        .HasForeignKey("LeaveGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.User", "Personnel")
                        .WithMany()
                        .HasForeignKey("PersonnelId1");

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.HrEmployees", "Supervisor")
                        .WithMany("InverseSupervisor")
                        .HasForeignKey("SupervisorId");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.ModuleAction", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Modules", "Module")
                        .WithMany("ModuleAction")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalAdmins", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.User", "ApplicationUser")
                        .WithOne("PortalAdmins")
                        .HasForeignKey("Unisol.Web.Entities.Database.MembershipModels.PortalAdmins", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalEvents", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.PortalEventTypes", "PortalEventType")
                        .WithMany()
                        .HasForeignKey("PortalEventTypeId");
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalNews", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.PortalNewsType", "PortalNewsType")
                        .WithMany()
                        .HasForeignKey("PortalNewsTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.PortalNewsViews", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.PortalNews")
                        .WithMany("PortalNewsViews")
                        .HasForeignKey("PortalNewsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.Sections", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.Departments", "Dept")
                        .WithMany("Sections")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.StaffTerminations", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.HrEmployees", "Staff")
                        .WithOne("StaffTerminations")
                        .HasForeignKey("Unisol.Web.Entities.Database.MembershipModels.StaffTerminations", "StaffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.TerminationTypes", "Type")
                        .WithMany("StaffTerminations")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.User", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.UserGroups", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Unisol.Web.Entities.Database.MembershipModels.UserToken", b =>
                {
                    b.HasOne("Unisol.Web.Entities.Database.MembershipModels.User", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
